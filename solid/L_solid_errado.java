/**
 * üö® Problema: Viola√ß√£o do Princ√≠pio da Substitui√ß√£o de Liskov (LSP - Liskov Substitution Principle)
 *
 * Este c√≥digo **viola o LSP**, pois `CarroEletrico` herda de `Carro`, mas **n√£o pode ser tratado corretamente como um `Carro`**.
 * O LSP diz que **qualquer subclasse deve poder substituir sua superclasse sem alterar o comportamento esperado**.
 *
 * üî¥ **Por que isso √© um problema?**
 * 1Ô∏è‚É£ `CarroEletrico` herda o m√©todo `abastecer()`, mas **n√£o deveria ter esse m√©todo**.
 * 2Ô∏è‚É£ A tentativa de chamar `abastecer()` em `CarroEletrico` **gera uma exce√ß√£o (`UnsupportedOperationException`)**.
 * 3Ô∏è‚É£ Isso viola o conceito de **Heran√ßa Correta**, pois a classe filha (`CarroEletrico`) n√£o pode ser usada corretamente no lugar da classe base (`Carro`).
 *
 * üîπ **Solu√ß√£o correta**:
 *    - Criar uma **classe base `Carro` mais gen√©rica**, contendo apenas `acelerar()`.
 *    - Criar **duas subclasses espec√≠ficas**:
 *      - `CarroCombustivel` (com `abastecer()`).
 *      - `CarroEletrico` (com `carregarBateria()`).
 *    - Assim, evitamos que carros el√©tricos tenham um m√©todo que n√£o faz sentido.
 */

 // Classe base de um carro
 class Carro {
  void acelerar() {
      System.out.println("O carro est√° acelerando!");
  }

  void abastecer() {
      System.out.println("Abastecendo com gasolina...");
  }
}

// Carro de corrida (ok, usa gasolina)
class CarroFormula1 extends Carro {
  void acelerar() {
      System.out.println("üèéÔ∏è O carro de F√≥rmula 1 est√° acelerando SUPER R√ÅPIDO!");
  }
}

// ‚ùå Problema: Carro el√©trico n√£o usa gasolina, mas herda o m√©todo abastecer()!
class CarroEletrico extends Carro {
  void acelerar() {
      System.out.println("‚ö° O carro el√©trico est√° acelerando silenciosamente!");
  }

  // ‚ùå M√©todo herdado que N√ÉO DEVERIA EXISTIR!
  void abastecer() {
      throw new UnsupportedOperationException("Carro el√©trico n√£o usa gasolina!");
  }
}

// Testando a corrida
// public class Main {
//   public static void main(String[] args) {
//       Carro meuCarro = new CarroEletrico();
//       meuCarro.acelerar();
//       meuCarro.abastecer(); // ‚ùå Vai dar erro!
//   }
// }