/**
 * üö® Problemas na Implementa√ß√£o: Viola√ß√£o do Princ√≠pio Aberto/Fechado (OCP - Open/Closed Principle)
 *
 * A classe `Restaurante` est√° violando o **Princ√≠pio Aberto/Fechado (OCP)** da Programa√ß√£o Orientada a Objetos.
 * O OCP diz que uma classe deve estar **aberta para extens√£o, mas fechada para modifica√ß√£o**.
 *
 * üî¥ **Problema principal**:
 * - O m√©todo `fazerLanche()` usa **compara√ß√µes diretas de strings (if/else)** para decidir qual lanche preparar.
 * - Se precisarmos adicionar um novo lanche (`batata-frita`, `taco`), seremos **obrigados a modificar** a classe `Restaurante`.
 * - Isso torna o c√≥digo **dif√≠cil de manter**, pois cada nova funcionalidade exige mudan√ßas diretas na classe principal.
 *
 * üî¥ **Desvantagens dessa abordagem**:
 * 1Ô∏è‚É£ **Baixa escalabilidade**:
 *    - A cada novo lanche, precisamos **modificar e recompilar** `Restaurante`.
 *    - Isso pode gerar bugs e tornar o c√≥digo cada vez mais dif√≠cil de gerenciar.
 *
 * 2Ô∏è‚É£ **Alto acoplamento**:
 *    - `Restaurante` conhece diretamente todas as op√ß√µes de lanche, o que dificulta mudan√ßas futuras.
 *
 * 3Ô∏è‚É£ **Dificuldade na reutiliza√ß√£o**:
 *    - Se quisermos reutilizar esse c√≥digo em outro contexto, teremos que copi√°-lo e modific√°-lo novamente.
 *
 * üîπ **Solu√ß√£o correta**:
 *    - Criar uma classe **abstrata `Lanche`** e **subclasses para cada lanche** (`Hamburguer`, `Pizza`, etc.).
 *    - O m√©todo `fazerLanche()` deve **aceitar um objeto `Lanche`** em vez de depender de strings.
 *    - Isso permite adicionar novos lanches **sem modificar a classe `Restaurante`**, respeitando o **OCP**.
 */

 class Restaurante {
    void fazerLanche(String tipo) {
        if (tipo.equals("hamburguer")) {
            System.out.println("üçî Fazendo um hamb√∫rguer!");
        } else if (tipo.equals("cachorro-quente")) {
            System.out.println("üå≠ Fazendo um cachorro-quente!");
        } else if (tipo.equals("pizza")) {
            System.out.println("üçï Fazendo uma pizza!");
        } else {
            System.out.println("‚ùå Esse lanche n√£o est√° no card√°pio!");
        }
    }
}

// üè° Testando o restaurante
// public class Main {
//     public static void main(String[] args) {
//         Restaurante restaurante = new Restaurante();
//         restaurante.fazerLanche("hamburguer");
//         restaurante.fazerLanche("cachorro-quente");
//         restaurante.fazerLanche("pizza");

//         // ‚ö† Se quisermos adicionar um novo lanche, PRECISAMOS MODIFICAR a classe Restaurante!
//         restaurante.fazerLanche("batata-frita");
//     }
// }