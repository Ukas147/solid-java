/**
 * üö® Problema: Viola√ß√£o do Princ√≠pio da Invers√£o de Depend√™ncia (DIP - Dependency Inversion Principle)
 *
 * O c√≥digo abaixo **viola o DIP**, pois o `VideoGame` **depende diretamente da implementa√ß√£o concreta** `ControleXbox`
 * em vez de depender de uma abstra√ß√£o (interface).
 *
 * O DIP afirma que:
 * 1Ô∏è‚É£ **M√≥dulos de alto n√≠vel (ex: `VideoGame`) n√£o devem depender de m√≥dulos de baixo n√≠vel (`ControleXbox`).**
 * 2Ô∏è‚É£ **Ambos devem depender de abstra√ß√µes (interfaces).**
 *
 * üî¥ **Problemas encontrados:**
 * 1Ô∏è‚É£ **Acoplamento alto** ‚Üí Se quisermos suportar outros controles (ex: `ControlePlayStation`, `ControleNintendo`),
 *    precisar√≠amos modificar o c√≥digo do `VideoGame`, tornando a classe r√≠gida e dif√≠cil de expandir.
 *
 * 2Ô∏è‚É£ **C√≥digo pouco flex√≠vel** ‚Üí O `VideoGame` **s√≥ funciona com `ControleXbox`**. Se quisermos adicionar outro controle,
 *    precisar√≠amos reescrever o c√≥digo do videogame.
 *
 * 3Ô∏è‚É£ **Dificuldade de manuten√ß√£o** ‚Üí Se `ControleXbox` for modificado, o `VideoGame` pode ser impactado diretamente.
 *
 * üîπ **O que aconteceria sem essa estrutura?**
 *    - Se quisermos suportar um novo controle (ex: `ControlePlayStation`), precisar√≠amos modificar `VideoGame`.
 *    - Isso tornaria o c√≥digo mais r√≠gido e dif√≠cil de reutilizar.
 */
 
// ‚ùå O videogame depende diretamente do ControleXbox
class ControleXbox {
  void pressionarBotao() {
      System.out.println("üéÆ Bot√£o pressionado no Controle Xbox!");
  }
}

class VideoGame {
  private ControleXbox controle; // ‚ö†Ô∏è O videogame depende diretamente de um controle espec√≠fico!

  VideoGame(ControleXbox controle) {
      this.controle = controle;
  }

  void jogar() {
      controle.pressionarBotao();
  }
}

// üè° Testando o videogame
// public class Main {
//     public static void main(String[] args) {
//         ControleXbox controle = new ControleXbox();
//         VideoGame videogame = new VideoGame(controle);
//         videogame.jogar(); // Funciona s√≥ com Controle Xbox
//     }
// }